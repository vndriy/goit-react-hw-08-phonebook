{"version":3,"file":"static/js/603.e3e419a3.chunk.js","mappings":"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","sources":["components/ContactForm/ContactForm.styled.js","redux/selectors.js","components/ContactForm/ContactForm.js","components/Filter/Filter.styled.js","components/Filter/Filter.js","components/ContactList/ContactList.styled.js","components/ContactList/ContactList.js","pages/ContactsPage.js"],"sourcesContent":["import styled from 'styled-components';\nimport { Form as StyledForm, Field as StyledField } from 'formik';\n\nexport const SectionInput = styled.div`\n  margin: 50px auto;\n  width: 200px;\n  border: 0px black solid;\n  padding: 5px;\n`;\n\nexport const Form = styled(StyledForm)`\n  background-color: #f5f5f5;\n  border-radius: 8px;\n  width: 200px;\n`;\n\nexport const Field = styled(StyledField)`\n  width: 100%;\n  padding: 10px;\n  margin-bottom: 15px;\n  box-sizing: border-box;\n  border: 1px solid #ccc;\n  border-radius: 4px;\n`;\n\nexport const Button = styled.button`\n  width: 100%;\n  padding: 10px;\n  background-color: #4caf50;\n  color: white;\n  border: none;\n  border-radius: 4px;\n  cursor: pointer;\n\n  &:hover {\n    background-color: #45a049;\n  }\n`;\n","import { createSelector } from '@reduxjs/toolkit';\n\nexport const selectContacts = state => state.contacts.items;\n\nexport const selectIsLoading = state => state.contacts.isLoading;\n\nexport const selectError = state => state.contacts.error;\n\nexport const selectFilter = state => state.filter;\n\nexport const selectVisibleContacts = createSelector(\n  [selectContacts, selectFilter],\n  (contacts, filter) => {\n    return contacts.filter(contact =>\n      contact.name.toLowerCase().includes(filter.toLowerCase())\n    );\n  }\n);\n","import { Form, Field, Button } from './ContactForm.styled';\nimport { Formik } from 'formik';\nimport { SectionInput } from './ContactForm.styled';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { addContact } from '../../redux/operations';\nimport { selectContacts } from '../../redux/selectors';\n\nexport const ContactForm = () => {\n  const dispatch = useDispatch();\n  const contacts = useSelector(selectContacts);\n\n  const handleSubmitContact = newContact => {\n    const isNameExists = contacts.some(\n      contact => contact.name.toLowerCase() === newContact.name.toLowerCase()\n    );\n\n    if (isNameExists) {\n      alert(`${newContact.name} is already in contacts.`);\n      return;\n    }\n\n    dispatch(addContact(newContact));\n  };\n\n  return (\n    <SectionInput>\n      <Formik\n        initialValues={{\n          name: '',\n          number: '',\n        }}\n        onSubmit={(values, action) => {\n          action.resetForm();\n          handleSubmitContact(values);\n        }}\n      >\n        <Form>\n          <label htmlFor=\"Name\">\n            Name\n            <Field type=\"text\" id=\"name\" name=\"name\" placeholder=\"\" required />\n          </label>\n\n          <label htmlFor=\"Number\">\n            Number\n            <Field\n              id=\"number\"\n              name=\"number\"\n              type=\"tel\"\n              placeholder=\"\"\n              required\n            />\n          </label>\n\n          <Button type=\"submit\">Submit</Button>\n        </Form>\n      </Formik>\n    </SectionInput>\n  );\n};\n","import styled from 'styled-components';\n\nexport const Input = styled.input`\n  width: 100%;\n  padding: 10px;\n  margin-bottom: 15px;\n  box-sizing: border-box;\n  border: 1px solid #ccc;\n  border-radius: 4px;\n`;\n","import { Input } from './Filter.styled';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { filterPhone } from '../../redux/filterSlice';\nimport { selectFilter } from '../../redux/selectors';\n\nexport const Filter = () => {\n  const dispatch = useDispatch();\n  const filter = useSelector(selectFilter);\n\n  const updateFilter = value => {\n    dispatch(filterPhone(value));\n  };\n\n  return (\n    <>\n      <span>Find Contacts by name</span>\n      <Input\n        value={filter}\n        type=\"text\"\n        placeholder=\"\"\n        onChange={evt => updateFilter(evt.target.value)}\n      />\n    </>\n  );\n};\n","import styled from 'styled-components';\n\nexport const List = styled.li`\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  padding: 10px;\n  border: 1px solid #ccc;\n  margin-bottom: 5px;\n  background-color: #f8f8f8;\n\n  button {\n    background-color: #ff6961;\n    color: #fff;\n    border: none;\n    padding: 5px 10px;\n    cursor: pointer;\n    transition: background-color 0.3s;\n\n    &:hover {\n      background-color: #d9534f;\n    }\n  }\n`;\n","import { List } from './ContactList.styled';\nimport { useSelector, useDispatch } from 'react-redux';\n\nimport { selectVisibleContacts } from '../../redux/selectors';\nimport { deleteContact } from '../../redux/operations';\n\nexport const ContactList = () => {\n  const contacts = useSelector(selectVisibleContacts);\n  const dispatch = useDispatch();\n\n  const handleDelete = contactId => dispatch(deleteContact(contactId));\n\n  return (\n    <div>\n      {contacts.map(flt => (\n        <List key={flt.id}>\n          {flt.name}: {flt.number}{' '}\n          <button onClick={() => handleDelete(flt.id)}>Delete</button>\n        </List>\n      ))}\n    </div>\n  );\n};\n","import { Phonebook } from '../components/App.styled';\n\nimport { ContactForm } from '../components/ContactForm/ContactForm';\nimport { Filter } from '../components/Filter/Filter';\nimport { ContactList } from '../components/ContactList/ContactList';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { selectError, selectIsLoading } from '../redux/selectors';\nimport { useEffect } from 'react';\nimport { fetchContacts } from '../redux/operations';\n\nexport default function Contacts() {\n  const dispatch = useDispatch();\n  const contacts = useSelector(state => state.contacts.items);\n  const isLoading = useSelector(selectIsLoading);\n  const error = useSelector(selectError);\n\n  useEffect(() => {\n    dispatch(fetchContacts());\n  }, [dispatch]);\n\n  return (\n    <Phonebook>\n      <h1>Phonebook</h1>\n\n      <ContactForm />\n      <h2>Contacts</h2>\n      {contacts.length > 0 ? <Filter /> : <p>You don't have any contacts</p>}\n      {isLoading && <p>Loading contacts...</p>}\n      {contacts.length > 0 && <ContactList />}\n      {error && <p>{error}</p>}\n    </Phonebook>\n  );\n}\n"],"names":["SectionInput","styled","_templateObject","_taggedTemplateLiteral","Form","StyledForm","_templateObject2","Field","StyledField","_templateObject3","Button","_templateObject4","selectContacts","state","contacts","items","selectIsLoading","isLoading","selectError","error","selectFilter","filter","selectVisibleContacts","createSelector","contact","name","toLowerCase","includes","ContactForm","dispatch","useDispatch","useSelector","_jsx","children","Formik","initialValues","number","onSubmit","values","action","newContact","resetForm","some","alert","concat","addContact","_jsxs","htmlFor","type","id","placeholder","required","Input","Filter","_Fragment","value","onChange","evt","target","filterPhone","List","ContactList","map","flt","onClick","contactId","deleteContact","Contacts","useEffect","fetchContacts","Phonebook","length"],"sourceRoot":""}